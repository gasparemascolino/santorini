package it.polimi.ingsw.server.model;

import it.polimi.ingsw.server.controller.Divinity;
import it.polimi.ingsw.server.controller.divinities.*;

/**
 *  Class of player
 *  @author Gaspare Mascolino
 */
public class Player {

    private String nickname;
    private int indexPlayer;
    private String divinityname;
    private Worker worker1, worker2;

    /**
     * Builder of Player, creates his two Workers and give them the divinity behaviour chosen
     * @param nickname name of player
     * @param indexPlayer index of player
     * @param divinityname name of divinity chosen by this player
     * @param color to distinguish opposing workers from allied workers
     */
    public Player(String nickname, int indexPlayer, String divinityname, String color) {
        this.nickname = nickname;
        this.indexPlayer=indexPlayer;
        this.divinityname=divinityname;

        worker1 = new Worker(1, color);
        worker2 = new Worker(2, color);

        Divinity divinity = null;
     
        try {
            if (divinityname.equals("Apollo")) {
                divinity = new Apollo();
            }

            if (divinityname.equals("Artemis")) {
                divinity = new Artemis();
            }

            if (divinityname.equals("Athena")) {
                divinity = new Athena();
            }

            if (divinityname.equals("Atlas")) {
                divinity = new Atlas();
            }

            if (divinityname.equals("Demeter")) {
                divinity = new Demeter();
            }

            if (divinityname.equals("Hephaestus")) {
                divinity = new Hephaestus();
            }

            if (divinityname.equals("Minotaur")) {
                divinity = new Minotaur();
            }

            if (divinityname.equals("Pan")) {
                divinity = new Pan();
            }

            if (divinityname.equals("Prometheus")) {
                divinity = new Prometheus();
            }

            if (divinityname.equals("Chronus")) {
                divinity = new Chronus();
            }

            if (divinityname.equals("Hestia")) {
                divinity = new Hestia();
            }

            if (divinityname.equals("Poseidon")) {
                divinity = new Poseidon();
            }

            if (divinityname.equals("Triton")) {
                divinity = new Triton();
            }

            if (divinityname.equals("Zeus")) {
                divinity = new Zeus();
            }

            worker1.setDivinity(divinity);
            worker2.setDivinity(divinity);
        }
        catch(NoClassDefFoundError e) {System.out.println("DivinityClassNotFound");}


    }


    /**
     * @return nickname of this player
     */
    public String getNickname() {
        return nickname;
    }

    /**
     * Choose worker 1 or worker 2
     * @param index 1 or 2
     * @return player Worker
     * @exception NullPointerException exception generated by (index!=1 || index!=2)
     */
    public Worker getWorker(int index) throws NullPointerException {

        try{
            if(index==1)
                return worker1;
            else
                return worker2;
        }catch(NullPointerException e) {
            System.out.println("WorkerNotFound");
            return null;
        }
    }

    /**
     * @return name of Divinity chosen by this player
     */
    public String getDivinity() {
        return divinityname;
    }

    /**
     * @return true if this Player is the first to play, false otherwise
     */
    public boolean isFirstplayer() {

        return indexPlayer == 1;
    }
}


